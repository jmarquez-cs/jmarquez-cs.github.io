import{R as f,b as z,r as B,P as p}from"./index-DhFFnUky.js";import{a as b,b as C}from"./usePerformanceMonitor-BteRx6Vv.js";const m=({isVisible:y=!0})=>{const{totalSize:e,compressedSize:c,chunks:i,dependencies:h,cacheEfficiency:t}=b();C();const{theme:k}=z();return B.useCallback(o=>{if(o===0)return"0 Bytes";const l=1024,s=["Bytes","KB","MB","GB"],a=Math.floor(Math.log(o)/Math.log(l));return parseFloat((o/Math.pow(l,a)).toFixed(2))+" "+s[a]},[]),B.useMemo(()=>{var g;const o=[...i].sort((n,u)=>(u.size||0)-(n.size||0)),l=o.slice(0,5),s=e>0?((e-c)/e*100).toFixed(1):0,a={bundleSize:e<3e5?"A":e<5e5?"B":e<1e6?"C":"D",compression:s>70?"A":s>50?"B":s>30?"C":"D",caching:parseFloat(t)>80?"A":parseFloat(t)>60?"B":parseFloat(t)>40?"C":"D"},r=[];return e>5e5&&r.push("Consider code splitting for large chunks"),s<50&&r.push("Enable gzip/brotli compression"),parseFloat(t)<60&&r.push("Implement better caching strategies"),((g=l[0])==null?void 0:g.size)>2e5&&r.push("Split large chunks into smaller modules"),{sortedChunks:o,largestChunks:l,overallCompressionRatio:s,performanceScore:a,recommendations:r,asyncChunks:i.filter(n=>n.name.includes("chunk")),mainBundle:i.filter(n=>!n.name.includes("chunk")),dependencies:Object.entries(h).sort(([,n],[,u])=>u-n).slice(0,5)}},[i,e,c,t,h]),null};m.displayName="BundleAnalyzer";m.propTypes={isVisible:p.bool};const F=f.memo(m),d=({isVisible:y,onToggle:e})=>{const{theme:c}=z();return null};d.displayName="BundleAnalyzerToggle";d.propTypes={isVisible:p.bool.isRequired,onToggle:p.func.isRequired};const M=f.memo(d);export{F as BundleAnalyzer,M as BundleAnalyzerToggle};
