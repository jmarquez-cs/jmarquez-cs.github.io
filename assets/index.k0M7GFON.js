const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/mermaid.core.RcZ3LXYD.js","assets/index.cFPkO862.js"])))=>i.map(i=>d[i]);
import{R as e,u as a,r as t,_ as r,P as o}from"./index.cFPkO862.js";const c=()=>e.createElement("div",{className:"mermaid-loading"},e.createElement("div",{className:"mermaid-loading-container"},e.createElement("div",{className:"mermaid-loading-spinner"}),e.createElement("div",{className:"mermaid-loading-skeleton"},e.createElement("div",{className:"skeleton-header"}),e.createElement("div",{className:"skeleton-diagram"},e.createElement("div",{className:"skeleton-node"}),e.createElement("div",{className:"skeleton-line"}),e.createElement("div",{className:"skeleton-node"}),e.createElement("div",{className:"skeleton-line"}),e.createElement("div",{className:"skeleton-node"}))),e.createElement("p",null,"Loading diagram renderer..."))),n=()=>{const{theme:o}=a(),[n,l]=t.useState("graph TD\n    A[Business Needs<br>Stakeholder Goals] --\x3e|Identify Requirements| B{Fractional CTO}\n    B --\x3e|Strategic Planning| C[Technical Strategy<br>Architecture Design]\n    B --\x3e|Team Leadership| D[Development Teams<br>Agile Execution]\n    B --\x3e|Infrastructure Oversight| E[Cloud & DevOps<br>Deployment]\n    C --\x3e|Define Tech Stack| F[Technologies<br>e.g., GCP, Terraform, Docker]\n    D --\x3e|CI/CD Pipelines| G[Development<br>Code & Test]\n    E --\x3e|Scalability & Security| H[Production<br>Deployment]\n    F --\x3e G\n    G --\x3e H\n    H --\x3e|Deliver Solutions| I[Business Outcomes<br>Client Success]"),[i,f]=t.useState(""),[s,d]=t.useState(null),[m,g]=t.useState(!1),[u,b]=t.useState(null),[h]=t.useState(0),p=t.useRef(null),y=t.useRef(null),[C,E]=t.useState(!1),[v,x]=t.useState({width:0,height:0}),T="dark"===o;t.useEffect(()=>{const e=new IntersectionObserver(e=>{e.forEach(e=>{e.isIntersecting&&e.intersectionRatio>.1&&"undefined"!=typeof window&&"requestIdleCallback"in window&&window.requestIdleCallback(()=>{r(()=>import("./mermaid.core.RcZ3LXYD.js").then(e=>e.b6),__vite__mapDeps([0,1])).catch(()=>{})})})},{threshold:.1,rootMargin:"50px"});return y.current&&e.observe(y.current),()=>e.disconnect()},[]),t.useEffect(()=>{if(!p.current)return;const e=new ResizeObserver(e=>{for(const a of e){const{width:e,height:t}=a.contentRect;x({width:e,height:t})}});return e.observe(p.current),()=>e.disconnect()},[]),t.useEffect(()=>{if(!p.current||!i)return;const e=p.current.querySelector("svg");e&&v.width>0&&(e.style.maxWidth="100%",e.style.height="auto",e.style.width="auto")},[i,v]);const k=t.useMemo(()=>({theme:"base",fontFamily:"Inter Tight, sans-serif",fontSize:"16px",textColor:T?"#fafafa":"#0a0d1a",themeVariables:{fontFamily:"Inter Tight, sans-serif",fontSize:"16px",textColor:T?"#fafafa":"#0a0d1a",darkMode:T,background:T?"#0c0f1d":"#f7f7f7",primaryColor:T?"#1a1d2e":"#eafcfa",primaryTextColor:T?"#fafafa":"#0c0f1d",primaryBorderColor:T?"#37c5b3":"#97f0e5",secondaryColor:T?"#613dff":"#f6ce9e",secondaryTextColor:T?"#fafafa":"#0c0f1d",secondaryBorderColor:T?"#97f0e5":"#f97946",tertiaryColor:T?"#f946ac":"#8cf28a",tertiaryTextColor:T?"#fafafa":"#0c0f1d",tertiaryBorderColor:T?"#f759b7":"#6bcc69",lineColor:T?"#f7f7f7":"#37c5b3",arrowheadColor:T?"#f7f7f7":"#37c5b3",edgeColor:T?"#f7f7f7":"#37c5b3",defaultLinkColor:T?"#f7f7f7":"#37c5b3",clusterBkg:T?"#252842":"#e9ccff",clusterBorder:T?"#a56ff1":"#c584f6",noteBkgColor:"#f9d546",noteTextColor:"#0c0f1d",noteBorderColor:"#f97946",errorBkgColor:T?"#b91c1c":"#f87171",errorTextColor:T?"#f87171":"#b91c1c",nodeBorder:T?"#37c5b3":"#97f0e5",nodeTextColor:T?"#fafafa":"#0c0f1d",edgeLabelBackground:T?"#1a1d2e":"#eafcfa",titleColor:T?"#fafafa":"#0a0d1a",actorBkg:T?"#0c0f1d":"#f7f7f7",actorBorder:T?"#37c5b3":"#97f0e5",actorTextColor:T?"#fafafa":"#0c0f1d",actorLineColor:T?"#f7f7f7":"#37c5b3",signalColor:T?"#f7f7f7":"#37c5b3",signalTextColor:T?"#fafafa":"#0c0f1d",labelBoxBkgColor:T?"#1a1d2e":"#eafcfa",labelBoxBorderColor:T?"#37c5b3":"#97f0e5",labelTextColor:T?"#fafafa":"#0c0f1d",loopTextColor:T?"#fafafa":"#0c0f1d",activationBorderColor:T?"#97f0e5":"#37c5b3",activationBkgColor:T?"#252842":"#f0fffe",sequenceNumberColor:T?"#fafafa":"#0c0f1d",section0:T?"#1a1d2e":"#eafcfa",section1:T?"#613dff":"#f6ce9e",section2:T?"#f946ac":"#8cf28a",section3:T?"#37c5b3":"#fce4a6",git0:T?"#1a1d2e":"#eafcfa",git1:T?"#613dff":"#f6ce9e",git2:T?"#f946ac":"#8cf28a",git3:T?"#37c5b3":"#fce4a6",git4:T?"#f759b7":"#f0c5d8",git5:T?"#97f0e5":"#d4b5f7",git6:T?"#f97946":"#b8e6d3",git7:T?"#6bcc69":"#ffd5a6",pieTitleTextSize:"20px",pieTitleTextColor:T?"#fafafa":"#0a0d1a",pieOuterStrokeWidth:"2px",pieStrokeColor:T?"#37c5b3":"#0a0d1a",pieOpacity:"0.9",fillType0:T?"#1a1d2e":"#eafcfa",fillType1:T?"#613dff":"#f6ce9e",fillType2:T?"#f946ac":"#8cf28a",fillType3:T?"#37c5b3":"#fce4a6",fillType4:T?"#f759b7":"#f0c5d8",fillType5:T?"#97f0e5":"#d4b5f7",fillType6:T?"#f97946":"#b8e6d3",fillType7:T?"#6bcc69":"#ffd5a6"}}),[T]);t.useEffect(()=>{const e=async()=>{try{if(E(!0),!s){const e=await(async()=>{try{return(await r(()=>import("./mermaid.core.RcZ3LXYD.js").then(e=>e.b6),__vite__mapDeps([0,1]))).default}catch(u){throw console.error("Failed to load Mermaid:",u),u}})();d(e),g(!0)}}catch(e){console.error("Failed to load Mermaid library:",e),b(e),g(!1)}finally{E(!1)}};s||C||e()},[s,C]),t.useEffect(()=>{if(!s||!m||!n)return;(async()=>{try{p.current&&(p.current.innerHTML=""),s.initialize(k);const{svg:e}=await s.render("mermaid-graph",n);f(e),b(null)}catch(e){f(`<p>Error rendering diagram: ${e.message}</p>`),b(e)}})()},[n,o,m,s,k]);return e.createElement("section",{className:"section",ref:y},e.createElement("div",{className:"container"},e.createElement("h2",{className:"section-title"},"Mermaid.js"),u&&e.createElement("div",{className:"alert alert-danger",role:"alert"},"Error: ",u.message),!m&&!u&&e.createElement(c,null),h>0&&h<100&&e.createElement("div",{className:"loading-progress"},e.createElement("div",{className:"progress-bar",style:{width:`${h}%`}}),e.createElement("span",{className:"progress-text"},h,"% loaded")),m&&e.createElement("div",{className:"mermaid-container"},e.createElement("div",{className:"mermaid-editor-diagram-wrapper"},e.createElement("div",{className:"mermaid-editor"},e.createElement("textarea",{value:n,onChange:e=>l(e.target.value),placeholder:"Enter your Mermaid syntax here..."})),e.createElement("div",{className:"mermaid-diagram",ref:p,dangerouslySetInnerHTML:{__html:i}})),e.createElement("div",{className:"mermaid-buttons"},e.createElement("button",{className:"btn btn-primary",onClick:()=>{if(!i)return;const e=new Blob([i],{type:"image/svg+xml"}),a=URL.createObjectURL(e),t=document.createElement("a");t.href=a,t.download="diagram.svg",t.click(),URL.revokeObjectURL(a)}},"Download SVG"),e.createElement("button",{className:"btn btn-secondary",onClick:()=>{var e;const a=null==(e=p.current)?void 0:e.querySelector("svg");if(a)try{const e=document.createElement("canvas"),t=a.getBBox();e.width=2*t.width,e.height=2*t.height;const r=e.getContext("2d");if(!r)return;r.scale(2,2);const o=new Image,c=(new XMLSerializer).serializeToString(a),n=new Blob([c],{type:"image/svg+xml;charset=utf-8"}),l=URL.createObjectURL(n);o.onload=()=>{r.drawImage(o,0,0),e.toBlob(e=>{if(e){const a=URL.createObjectURL(e),t=document.createElement("a");t.href=a,t.download="diagram.png",t.click(),URL.revokeObjectURL(a)}},"image/png"),URL.revokeObjectURL(l)},o.onerror=()=>{URL.revokeObjectURL(l)},o.src=l}catch(t){console.error("Error generating PNG:",t)}}},"Download PNG")))))};n.propTypes={diagramDefinition:o.string,theme:o.oneOf(["light","dark"])};const l=e.memo(n);export{l as Mermaid};
